{% extends 'base.html.twig' %}

{% block body %}
<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3">
    <h1 class="h2"><i class="fa fa-globe"></i> Activiteiten</h1>
</div>

<div class="row">
    <div class="table-responsive col-12">
        <table class="table table-striped table-sm" id="activitiesTable">
            <thead>
            <tr>
                <th>Naam</th>
                <th>Afstand</th>
                <th>Tijd</th>
                <th><i class="fa fa-thumbs-up"></i></th>
                <th>Hoogte</th>
                <th></th>
                <th>Datum</th>
                <th></th>
            </tr>
            </thead>
            <tbody>
            </tbody>
        </table>
    </div>
</div>
{% endblock %}

{% block javascripts %}
    <script>
        $(document).ready( function () {
            $('#activitiesTable').DataTable({
                processing: true,
                serverSide: true,
                ajax: {
                    url: "/activities/list",
                    dataSrc: "activities"
                },
                order: [[ 6, 'desc' ]],
                columns: [
                    { data: "name", sortable: false, render: function (data, type, row) {
                        return '<a href="/activities/' + row['id'] + '">' + data + '</a>';
                    } },
                    { data: "distance", sortable: false, render: function (data) {
                        return (data / 1000).toFixed(1).replace('.', ',') + ' km';
                    } },
                    { data: "elapsed_time", sortable: false, render: function (data) {
                        var hours = (data / 3600).toFixed(0).toString();
                        var minutes = ((data % 3600) / 60).toFixed(0).toString().padStart(2, '0');
                        var seconds = (data % 60).toString().padStart(2, '0');
                        return hours + ':' + minutes + ':' + seconds;
                    } },
                    { data: "kudos_count", sortable: false },
                    { data: "total_elevation_gain", sortable: false, render: function (data) {
                            return (data).toFixed(0) + ' m';
                    } },
                    { data: "type", sortable: false, render: function (data) {
                        switch (data) {
                            case 'Ride':
                                return '<i class="fa fa-bicycle" title="' + data + '"></i>';
                            case 'Walk':
                                return '<i class="fa fa-walking" title="' + data + '"></i>';
                            case 'Snowboard':
                                return '<i class="fa fa-snowflake" title="' + data + '"></i>';
                            default:
                                return data;
                        };
                    } },
                    { data: "start_date_local", sortable: false, render: function (data) {
                        return data.replace('T', ' ').replace('Z', '');
                    } },
                    { name: "id", sortable: false, render: function (data, type, row) {
                        return '<a href="/activities/' + data + '/map"><i class="fa fa-map"></i></a>';
                    }}
                ]
            });
        } );
    </script>
{% endblock %}
